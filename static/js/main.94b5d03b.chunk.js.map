{"version":3,"sources":["redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","components/Container/Container.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-operations.js","components/Form/Form.js","components/Filter/Filter.js","components/contactList/ContactList.js","App.js","reportWebVitals.js","index.js"],"names":["fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","items","createReducer","state","payload","filter","id","loading","error","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contacts","contactsReducer","devTools","process","Container","children","className","getContacts","getFilter","getVisibleContacts","normalizedFilter","toLowerCase","name","includes","axios","defaults","baseURL","addContact","number","dispatch","contact","post","then","data","catch","deleteContact","delete","Form","useDispatch","useSelector","useState","setName","setNumber","handleChange","e","target","value","resetInput","onSubmit","preventDefault","find","checkRepeatName","checkRepeatNumber","trim","checkEmptyQuery","test","checkValidNumber","ContactOperations","toast","info","type","onChange","placeholder","Filter","currentTarget","ContactList","visibleContacts","map","onClick","onDeleteContact","App","autoClose","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.94b5d03b.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\n\nexport const fetchContactRequest = createAction(\n  \"contacts/fetchcontactsRequest\"\n);\nexport const fetchContactSuccess = createAction(\n  \"contacts/fetchcontactsSuccess\"\n);\nexport const fetchContactError = createAction(\"contacts/fetchContactsError\");\n\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\nexport const addContactError = createAction(\"contacts/addContactError\");\n\nexport const deleteContactRequest = createAction(\n  \"contacts/deleteContactRequest\"\n);\nexport const deleteContactSuccess = createAction(\n  \"contacts/deleteContactSuccess\"\n);\nexport const deleteContactError = createAction(\"contacts/deleteContactError\");\n\nexport const changeFilter = createAction(\"contacs/changeFilter\");\n","import { combineReducers } from \"redux\";\n\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n} from \"./contacts-actions\";\n\nconst items = createReducer([], {\n  [fetchContactSuccess]: (state, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [payload, ...state],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [changeFilter]: (state, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n\n  [fetchContactRequest]: () => true,\n  [fetchContactSuccess]: () => false,\n  [fetchContactError]: () => false,\n\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst error = createReducer(null, {});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\n\nimport contactsReducer from \"./contacts/contacts-reducer\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n","import T from \"prop-types\";\nimport \"../Container/Container.css\";\n\nconst Container = ({ children }) => {\n  return <div className=\"container\">{children}</div>;\n};\n\nContainer.propTypes = {\n  children: T.node.isRequired,\n};\n\nexport default Container;\n","export const getContacts = (state) => state.contacts.items;\nexport const getFilter = (state) => state.contacts.filter;\n\nexport const getVisibleContacts = (state) => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(\n    ({ name }) =>\n      name && name.toLowerCase && name.toLowerCase().includes(normalizedFilter)\n  );\n};\n","import axios from \"axios\";\nimport {\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n} from \"./contacts-actions\";\n\naxios.defaults.baseURL = \"http://localhost:4040\";\n\nexport const fetchContacts = () => (dispatch) => {\n  dispatch(fetchContactRequest());\n\n  axios\n    .get(\"/contacts\")\n    .then(({ data }) => dispatch(fetchContactSuccess(data)))\n    .catch((error) => dispatch(fetchContactError(error)));\n};\n\nexport const addContact = (name, number) => (dispatch) => {\n  const contact = {\n    name,\n    number,\n  };\n  dispatch(addContactRequest);\n\n  axios\n    .post(\"/contacts\", contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch((error) => dispatch(addContactError(error)));\n};\n\nexport const deleteContact = (id) => (dispatch) => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacs/${id}`)\n    .then(() => dispatch(deleteContactSuccess(id)))\n    .catch((error) => dispatch(deleteContactError(error)));\n};\n\nexport default {\n  fetchContacts,\n  addContact,\n  deleteContact,\n};\n","import { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { getContacts } from \"../../redux/contacts/contacts-selectors\";\n\nimport { toast } from \"react-toastify\";\nimport * as ContactOperations from \"../../redux/contacts/contacts-operations\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport \"../Form/Form.css\";\n\nfunction Form() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const checkRepeatName = (name) => {\n    return contacts.find(\n      (contact) =>\n        contact &&\n        contact.toLowerCase &&\n        contact.name.toLowerCase() === name.toLowerCase()\n    );\n  };\n\n  const checkRepeatNumber = (number) => {\n    return contacts.find((contact) => contact.number === number);\n  };\n\n  const checkEmptyQuery = (name, number) => {\n    return name.trim() === \"\" || number.trim() === \"\";\n  };\n\n  const checkValidNumber = (number) => {\n    return !/\\d{3}[-]\\d{2}[-]\\d{2}/g.test(number);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (checkRepeatName(name)) {\n      toast(`'${name}' is already in use!`);\n    } else if (checkRepeatNumber(number)) {\n      toast(`🤔 ${number} is already in use`);\n    } else if (checkEmptyQuery(name, number)) {\n      toast.info(\" Enter the correct name and number!\");\n    } else if (checkValidNumber(number)) {\n      toast.error(\"# Enter the correct phone number!\");\n    } else {\n      dispatch(ContactOperations.addContact(name, number));\n    }\n    resetInput();\n  };\n\n  const resetInput = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form id=\"contact\" onSubmit={handleSubmit}>\n      <label>\n        Name\n        <input\n          className=\"input-field\"\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          placeholder=\"John Dows\"\n        />\n      </label>\n      <br />\n      <label>\n        Phone number\n        <input\n          className=\"input-field\"\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          placeholder=\"459-12-56\"\n        />\n      </label>\n\n      <button type=\"submit\" className=\"submit-button\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nexport default Form;\n","import \"../Filter/Filter.css\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getFilter } from \"../../redux/contacts/contacts-selectors\";\nimport * as ContactOperations from \"../../redux/contacts/contacts-actions\";\n\nconst Filter = () => {\n  const value = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <label>\n      Find contacts by name\n      <input\n        type=\"text\"\n        value={value}\n        onChange={(e) =>\n          dispatch(ContactOperations.changeFilter(e.currentTarget.value))\n        }\n      />\n    </label>\n  );\n};\n\n// const mapStateToProps = state => (\n//   {\n//     value: state.contacts.filter,\n//   });\n\nexport default Filter;\n","import \"../contactList/ContactList.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport * as ContactOperations from \"../../redux/contacts/contacts-operations\";\nimport { getVisibleContacts } from \"../../redux/contacts/contacts-selectors\";\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n  const visibleContacts = useSelector(getVisibleContacts);\n  // const contacts = useSelector(getContacts);\n  const onDeleteContact = (id) => dispatch(ContactOperations.deleteContact(id));\n\n  return (\n    <ul className=\"contact-list\">\n      {visibleContacts.map(({ id, name, number }) => (\n        <li key={id}>\n          <p>\n            <b>{name} </b>\n            <em>{number}</em>\n          </p>\n          <button type=\"button\" onClick={() => onDeleteContact(id)}>\n            delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import \"./App.css\";\n\nimport { Component } from \"react\";\n// import shortid from 'shortid';\nimport Container from \"./components/Container/Container\";\nimport Form from \"./components/Form/Form\";\nimport Filter from \"./components/Filter/Filter.js\";\nimport ContactList from \"./components/contactList/ContactList\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <Form />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n        <ToastContainer autoClose={5000} />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\n// import { store, persistor } from './redux/store';\nimport { store } from \"./redux/store\";\n\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}